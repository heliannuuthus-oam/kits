name: publish

on:
  push:
    tags:
      - "v*.*.*"
    paths-ignore:
      - "README.md"
      - "docs/**"
      - ".vscode"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "README.md"
      - ".vscode"

permissions:
  actions: write
  contents: write
  security-events: write

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-latest"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: pnpm install && rustup target list && pnpm tauri info && rustup target add x86_64-apple-darwin && pnpm tauri build --target ${{matrix.settings.args}}

      - name: Build and Release
        id: tauri-action
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Kits v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.settings.args }}

      - name: upload tauri-artifact
        uses: actions/upload-artifact@v3
        with:
          name: tauri-artifact
          path: |
            ${{ fromJSON(steps.tauri-action.outputs.artifactPaths)[0] }}
            ${{ fromJSON(steps.tauri-action.outputs.artifactPaths)[1] }}
            ${{ fromJSON(steps.tauri-action.outputs.artifactPaths)[2] }}
